dist: trusty
language: rust
rust: nightly
services: docker
sudo: required

matrix:
  include:
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu
env: TARGET=x86_64-unknown-linux-gnu

install:
  # install rustup
  - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $TRAVIS_RUST_VERSION
  - source ~/.cargo/env

  # install `cross`
  - curl -sf "https://japaric.github.io/trust/install.sh" |
    sh -s -- --git japaric/cross --tag v0.1.0 --target x86_64-unknown-linux-musl --to ~/.cargo/bin

script:
  # if this is a library, generate the .lock file (`cross` can't do this)
  # - cargo generate-lockfile
  - cross build --target $TARGET
  # NOTE the test/run commands don't work for the s390x target
  - test $TARGET = s390x-unknown-linux-gnu || cross test --target $TARGET
  - test $TARGET = s390x-unknown-linux-gnu || cross run --target $TARGET

branches:
  only:
    - master

notifications:
  email:
    on_success: never
